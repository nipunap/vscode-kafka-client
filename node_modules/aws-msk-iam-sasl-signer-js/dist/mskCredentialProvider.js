"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getDefaultCredentials = exports.getCredentialsFromRole = exports.getCredentialsFromProfile = void 0;
var credential_providers_1 = require("@aws-sdk/credential-providers");
var constants_1 = require("./constants");
var getCredentialsFromProfile = function (awsProfileName) {
    return (0, credential_providers_1.fromIni)({
        profile: awsProfileName
    });
};
exports.getCredentialsFromProfile = getCredentialsFromProfile;
var getCredentialsFromRole = function (region, awsRoleArn, awsRoleSessionName) {
    return (0, credential_providers_1.fromTemporaryCredentials)({
        params: {
            RoleArn: awsRoleArn,
            RoleSessionName: awsRoleSessionName !== null && awsRoleSessionName !== void 0 ? awsRoleSessionName : "MSKSASLDefaultSession"
        },
        clientConfig: {
            region: region,
            maxAttempts: constants_1.DEFAULT_MAX_RETRIES
        }
    });
};
exports.getCredentialsFromRole = getCredentialsFromRole;
var getDefaultCredentials = function (options) {
    var _a;
    return (0, credential_providers_1.fromNodeProviderChain)({
        maxRetries: constants_1.DEFAULT_MAX_RETRIES,
        roleSessionName: (_a = options === null || options === void 0 ? void 0 : options.awsRoleSessionName) !== null && _a !== void 0 ? _a : "MSKSASLDefaultSession",
        clientConfig: {
            region: options === null || options === void 0 ? void 0 : options.region,
        }
    });
};
exports.getDefaultCredentials = getDefaultCredentials;
//# sourceMappingURL=mskCredentialProvider.js.map