import { createAggregatedClient } from "@smithy/smithy-client";
import { BatchAssociateScramSecretCommand, } from "./commands/BatchAssociateScramSecretCommand";
import { BatchDisassociateScramSecretCommand, } from "./commands/BatchDisassociateScramSecretCommand";
import { CreateClusterCommand, } from "./commands/CreateClusterCommand";
import { CreateClusterV2Command, } from "./commands/CreateClusterV2Command";
import { CreateConfigurationCommand, } from "./commands/CreateConfigurationCommand";
import { CreateReplicatorCommand, } from "./commands/CreateReplicatorCommand";
import { CreateVpcConnectionCommand, } from "./commands/CreateVpcConnectionCommand";
import { DeleteClusterCommand, } from "./commands/DeleteClusterCommand";
import { DeleteClusterPolicyCommand, } from "./commands/DeleteClusterPolicyCommand";
import { DeleteConfigurationCommand, } from "./commands/DeleteConfigurationCommand";
import { DeleteReplicatorCommand, } from "./commands/DeleteReplicatorCommand";
import { DeleteVpcConnectionCommand, } from "./commands/DeleteVpcConnectionCommand";
import { DescribeClusterCommand, } from "./commands/DescribeClusterCommand";
import { DescribeClusterOperationCommand, } from "./commands/DescribeClusterOperationCommand";
import { DescribeClusterOperationV2Command, } from "./commands/DescribeClusterOperationV2Command";
import { DescribeClusterV2Command, } from "./commands/DescribeClusterV2Command";
import { DescribeConfigurationCommand, } from "./commands/DescribeConfigurationCommand";
import { DescribeConfigurationRevisionCommand, } from "./commands/DescribeConfigurationRevisionCommand";
import { DescribeReplicatorCommand, } from "./commands/DescribeReplicatorCommand";
import { DescribeVpcConnectionCommand, } from "./commands/DescribeVpcConnectionCommand";
import { GetBootstrapBrokersCommand, } from "./commands/GetBootstrapBrokersCommand";
import { GetClusterPolicyCommand, } from "./commands/GetClusterPolicyCommand";
import { GetCompatibleKafkaVersionsCommand, } from "./commands/GetCompatibleKafkaVersionsCommand";
import { ListClientVpcConnectionsCommand, } from "./commands/ListClientVpcConnectionsCommand";
import { ListClusterOperationsCommand, } from "./commands/ListClusterOperationsCommand";
import { ListClusterOperationsV2Command, } from "./commands/ListClusterOperationsV2Command";
import { ListClustersCommand, } from "./commands/ListClustersCommand";
import { ListClustersV2Command, } from "./commands/ListClustersV2Command";
import { ListConfigurationRevisionsCommand, } from "./commands/ListConfigurationRevisionsCommand";
import { ListConfigurationsCommand, } from "./commands/ListConfigurationsCommand";
import { ListKafkaVersionsCommand, } from "./commands/ListKafkaVersionsCommand";
import { ListNodesCommand } from "./commands/ListNodesCommand";
import { ListReplicatorsCommand, } from "./commands/ListReplicatorsCommand";
import { ListScramSecretsCommand, } from "./commands/ListScramSecretsCommand";
import { ListTagsForResourceCommand, } from "./commands/ListTagsForResourceCommand";
import { ListVpcConnectionsCommand, } from "./commands/ListVpcConnectionsCommand";
import { PutClusterPolicyCommand, } from "./commands/PutClusterPolicyCommand";
import { RebootBrokerCommand, } from "./commands/RebootBrokerCommand";
import { RejectClientVpcConnectionCommand, } from "./commands/RejectClientVpcConnectionCommand";
import { TagResourceCommand } from "./commands/TagResourceCommand";
import { UntagResourceCommand, } from "./commands/UntagResourceCommand";
import { UpdateBrokerCountCommand, } from "./commands/UpdateBrokerCountCommand";
import { UpdateBrokerStorageCommand, } from "./commands/UpdateBrokerStorageCommand";
import { UpdateBrokerTypeCommand, } from "./commands/UpdateBrokerTypeCommand";
import { UpdateClusterConfigurationCommand, } from "./commands/UpdateClusterConfigurationCommand";
import { UpdateClusterKafkaVersionCommand, } from "./commands/UpdateClusterKafkaVersionCommand";
import { UpdateConfigurationCommand, } from "./commands/UpdateConfigurationCommand";
import { UpdateConnectivityCommand, } from "./commands/UpdateConnectivityCommand";
import { UpdateMonitoringCommand, } from "./commands/UpdateMonitoringCommand";
import { UpdateReplicationInfoCommand, } from "./commands/UpdateReplicationInfoCommand";
import { UpdateSecurityCommand, } from "./commands/UpdateSecurityCommand";
import { UpdateStorageCommand, } from "./commands/UpdateStorageCommand";
import { KafkaClient } from "./KafkaClient";
const commands = {
    BatchAssociateScramSecretCommand,
    BatchDisassociateScramSecretCommand,
    CreateClusterCommand,
    CreateClusterV2Command,
    CreateConfigurationCommand,
    CreateReplicatorCommand,
    CreateVpcConnectionCommand,
    DeleteClusterCommand,
    DeleteClusterPolicyCommand,
    DeleteConfigurationCommand,
    DeleteReplicatorCommand,
    DeleteVpcConnectionCommand,
    DescribeClusterCommand,
    DescribeClusterOperationCommand,
    DescribeClusterOperationV2Command,
    DescribeClusterV2Command,
    DescribeConfigurationCommand,
    DescribeConfigurationRevisionCommand,
    DescribeReplicatorCommand,
    DescribeVpcConnectionCommand,
    GetBootstrapBrokersCommand,
    GetClusterPolicyCommand,
    GetCompatibleKafkaVersionsCommand,
    ListClientVpcConnectionsCommand,
    ListClusterOperationsCommand,
    ListClusterOperationsV2Command,
    ListClustersCommand,
    ListClustersV2Command,
    ListConfigurationRevisionsCommand,
    ListConfigurationsCommand,
    ListKafkaVersionsCommand,
    ListNodesCommand,
    ListReplicatorsCommand,
    ListScramSecretsCommand,
    ListTagsForResourceCommand,
    ListVpcConnectionsCommand,
    PutClusterPolicyCommand,
    RebootBrokerCommand,
    RejectClientVpcConnectionCommand,
    TagResourceCommand,
    UntagResourceCommand,
    UpdateBrokerCountCommand,
    UpdateBrokerStorageCommand,
    UpdateBrokerTypeCommand,
    UpdateClusterConfigurationCommand,
    UpdateClusterKafkaVersionCommand,
    UpdateConfigurationCommand,
    UpdateConnectivityCommand,
    UpdateMonitoringCommand,
    UpdateReplicationInfoCommand,
    UpdateSecurityCommand,
    UpdateStorageCommand,
};
export class Kafka extends KafkaClient {
}
createAggregatedClient(commands, Kafka);
